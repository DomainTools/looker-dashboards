filter {
	mutate {
		replace => {
			"principal_ip_present" => "false"
			"website_response" => ""
		}
	}

	mutate {
		gsub => ["message", "[\\r\\n\\t]*", ""]
	}

	json {
		source => "message"
		array_function => "split_columns"
		on_error => "not_json"
	}

	if [not_json] {
		drop {
			tag => "TAG_MALFORMED_ENCODING"
		}
	}

	mutate {
		replace => {
			"token_principal.hostname" = "%{domain}"
		}
		on_error => "no_principal_hostname"
	}

	mutate {
		replace => {
			"token_principal.domain.whois_server" => "%{whois_url}"
		}
		on_error => "_"
	}

	mutate {
		convert => {
			"adsense.value" => "string"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"adsense_label.value" => "%{adsense.value}"
		}
		on_error => "no_adsense_value"
	}

	if ![no_adsense_value] and [adsense][value] != "" {
		mutate {
			replace => {
				"adsense_label.key" => "adsense"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "adsense_label"
			}
		}
	}

	mutate {
		convert => {
			"alexa" => "string"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"alexa_label.value" => "%{alexa}"
		}
		on_error => "no_alexa_value"
	}

	if ![no_alexa_value] and [alexa] != "" {
		mutate {
			replace => {
				"alexa_label.key" => "alexa"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "alexa_label"
			}
		}
	}

	mutate {
		convert => {
			"popularity_rank" => "string"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"popularity_rank_label.value" => "%{popularity_rank}"
		}
		on_error => "no_popularity_rank_value"
	}

	if ![no_popularity_rank_value] and [popularity_rank] != "" {
		mutate {
			replace => {
				"popularity_rank_label.key" => "popularity_rank"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "popularity_rank_label"
			}
		}
	}

	mutate {
		convert => {
			"active" => "string"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.status" => "%{active}"
		}
		on_error => "_"
	}

	mutate {
		convert => {
			"google_analytics.value" => "string"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"google_analytics_label.value" => "%{google_analytics.value}"
		}
		on_error => "no_google_analytics_value"
	}

	if ![no_google_analytics_value] and [google_analytics][value] != "" {
		mutate {
			replace => {
				"google_analytics_label.key" => "google_analytics"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "google_analytics_label"
			}
		}
	}

	# Admin Information
	mutate {
		replace => {
			"token_principal.domain.admin.user_display_name" => "%{admin_contact.name.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.admin.company_name" => "%{admin_contact.org.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.admin.office_address.name" => "%{admin_contact.street.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.admin.office_address.city" => "%{admin_contact.city.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.admin.office_address.state" => "%{admin_contact.state.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"admin_contact_postal_label.value" => "%{admin_contact.postal.value}"
		}
		on_error => "no_admin_contact_postal_label_value"
	}

	if ![no_admin_contact_postal_label_value] and
	[admin_contact][postal][value] != "" {
		mutate {
			replace => {
				"admin_contact_postal_label.key" => "postal"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.admin.attribute.labels" =>
				"admin_contact_postal_label"
			}
		}
	}

	mutate {
		replace => {
			"token_principal.domain.admin.office_address.country_or_region" =>
			"%{admin_contact.country.value}"
		}
		on_error => "_"
	}

	mutate {
		merge => {
			"token_principal.domain.admin.phone_numbers" =>
			"admin_contact.phone.value"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"admin_contact_fax_label.value" => "%{admin_contact.fax.value}"
		}
		on_error => "no_admin_contact_fax_label_value"
	}

	if ![no_admin_contact_fax_label_value] and [admin_contact][fax][value] != "" {
		mutate {
			replace => {
				"admin_contact_fax_label.key" => "fax"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.admin.attribute.labels" => "admin_contact_fax_label"
			}
		}
	}

	for mail in admin_contact.email {
		mutate {
			replace => {
				"check_value" => "%{mail.value}"
			}
			on_error => "no_mail_value"
		}
		if ![no_mail_value] and [mail][value] =~ "^.+@.+$" {
			mutate {
				merge => {
					"token_principal.domain.admin.email_addresses" => "mail.value"
				}
				on_error => "_"
			}
		}
	}

	# Billing Information
	mutate {
		replace => {
			"token_principal.domain.billing.user_display_name" => "%{billing_contact.name.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.billing.company_name" => "%{billing_contact.org.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.billing.office_address.name" => "%{billing_contact.street.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.billing.office_address.city" => "%{billing_contact.city.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.billing.office_address.state" => "%{billing_contact.state.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"billing_contact_postal_label.value" => "%{billing_contact.postal.value}"
		}
		on_error => "no_billing_contact_postal_label_value"
	}

	if ![no_billing_contact_postal_label_value] and
	[billing_contact][postal][value] != "" {
		mutate {
			replace => {
				"billing_contact_postal_label.key" => "postal"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.billing.attribute.labels" =>
				"billing_contact_postal_label"
			}
		}
	}

	mutate {
		replace => {
			"token_principal.domain.billing.office_address.country_or_region" =>
			"%{billing_contact.country.value}"
		}
		on_error => "_"
	}

	mutate {
		merge => {
			"token_principal.domain.billing.phone_numbers" =>
			"billing_contact.phone.value"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"billing_contact_fax_label.value" => "%{billing_contact.fax.value}"
		}
		on_error => "no_billing_contact_fax_label_value"
	}

	if ![no_billing_contact_fax_label_value] and [billing_contact][fax][value] != "" {
		mutate {
			replace => {
				"billing_contact_fax_label.key" => "fax"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.billing.attribute.labels" => "billing_contact_fax_label"
			}
		}
	}

	for mail in billing_contact.email {
		mutate {
			replace => {
				"check_value" => "%{mail.value}"
			}
			on_error => "no_mail_value"
		}
		if ![no_mail_value] and [mail][value] =~ "^.+@.+$" {
			mutate {
				merge => {
					"token_principal.domain.billing.email_addresses" => "mail.value"
				}
				on_error => "_"
			}
		}
	}

	# Registrant Information
	mutate {
		replace => {
			"token_principal.domain.registrant.user_display_name" => "%{registrant_contact.name.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.registrant.company_name" => "%{registrant_contact.org.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.registrant.office_address.name" => "%{registrant_contact.street.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.registrant.office_address.city" => "%{registrant_contact.city.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.registrant.office_address.state" => "%{registrant_contact.state.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"registrant_contact_postal_label.value" => "%{registrant_contact.postal.value}"
		}
		on_error => "no_registrant_contact_postal_label_value"
	}

	if ![no_registrant_contact_postal_label_value] and
	[registrant_contact][postal][value] != "" {
		mutate {
			replace => {
				"registrant_contact_postal_label.key" => "postal"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.registrant.attribute.labels" =>
				"registrant_contact_postal_label"
			}
		}
	}

	mutate {
		replace => {
			"token_principal.domain.registrant.office_address.country_or_region" =>
			"%{registrant_contact.country.value}"
		}
		on_error => "_"
	}

	mutate {
		merge => {
			"token_principal.domain.registrant.phone_numbers" =>
			"registrant_contact.phone.value"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"registrant_contact_fax_label.value" => "%{registrant_contact.fax.value}"
		}
		on_error => "no_registrant_contact_fax_label_value"
	}

	if ![no_registrant_contact_fax_label_value] and [registrant_contact][fax][value] != "" {
		mutate {
			replace => {
				"registrant_contact_fax_label.key" => "fax"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.registrant.attribute.labels" => "registrant_contact_fax_label"
			}
		}
	}

	for mail in registrant_contact.email {
		mutate {
			replace => {
				"check_value" => "%{mail.value}"
			}
			on_error => "no_mail_value"
		}
		if ![no_mail_value] and [mail][value] =~ "^.+@.+$" {
			mutate {
				merge => {
					"token_principal.domain.registrant.email_addresses" => "mail.value"
				}
				on_error => "_"
			}
		}
	}

	# Technical contact Information
	mutate {
		replace => {
			"token_principal.domain.tech.user_display_name" => "%{technical_contact.name.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.tech.company_name" => "%{technical_contact.org.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.tech.office_address.name" => "%{technical_contact.street.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.tech.office_address.city" => "%{technical_contact.city.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"token_principal.domain.tech.office_address.state" => "%{technical_contact.state.value}"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"technical_contact_postal_label.value" => "%{technical_contact.postal.value}"
		}
		on_error => "no_technical_contact_postal_label_value"
	}

	if ![no_technical_contact_postal_label_value] and
	[technical_contact][postal][value] != "" {
		mutate {
			replace => {
				"technical_contact_postal_label.key" => "postal"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.tech.attribute.labels" =>
				"technical_contact_postal_label"
			}
		}
	}

	mutate {
		replace => {
			"token_principal.domain.tech.office_address.country_or_region" =>
			"%{technical_contact.country.value}"
		}
		on_error => "_"
	}

	mutate {
		merge => {
			"token_principal.domain.tech.phone_numbers" =>
			"technical_contact.phone.value"
		}
		on_error => "_"
	}

	mutate {
		replace => {
			"technical_contact_fax_label.value" => "%{technical_contact.fax.value}"
		}
		on_error => "no_technical_contact_fax_label_value"
	}

	if ![no_technical_contact_fax_label_value] and [technical_contact][fax][value] != "" {
		mutate {
			replace => {
				"technical_contact_fax_label.key" => "fax"
			}
		}
		mutate {
			merge => {
				"token_principal.domain.tech.attribute.labels" => "technical_contact_fax_label"
			}
		}
	}

	for mail in technical_contact.email {
		mutate {
			replace => {
				"check_value" => "%{mail.value}"
			}
			on_error => "no_mail_value"
		}
		if ![no_mail_value] and [mail][value] =~ "^.+@.+$" {
			mutate {
				merge => {
					"token_principal.domain.tech.email_addresses" => "mail.value"
				}
				on_error => "_"
			}
		}
	}

	date {
		match => ["create_date.value", "yyyy-MM-dd", "RFC3339",
		"UNIX", "ISO8601"]
		target => "token_principal.domain.creation_time"
		on_error => "format_not_match"
	}

	date {
		match => ["expiration_date.value", "yyyy-MM-dd", "RFC3339",
		"UNIX", "ISO8601"]
		target => "token_principal.domain.expiration_time"
		on_error => "format_not_match"
	}

	# email domain
	for index, email in email_domain {
		mutate {
			replace => {
				"token_email_domain" => ""
			}
		}

		mutate {
			replace => {
				"token_email_domain.value" => "%{email.value}"
			}
			on_error => "no_token_email_domain"
		}

		if ![no_token_email_domain] and [email][value] != "" {
			mutate {
				replace => {
					"token_email_domain.key" => "email_domain"
				}
			}

			mutate {
				merge => {
					"token_about.labels" => "token_email_domain"
				}
				on_error => "_"
			}
		}
	}

	# soa email
	for index, email in soa_email {
		mutate {
			replace => {
				"check_value" => "%{email.value}"
			}
			on_error => "no_mail_value"
		}
		if ![no_mail_value] and [email][value] =~ "^.+@.+$" {
			mutate {
				merge => {
					"token_principal.user.email_addresses" => "email.value"
				}
				on_error => "_"
			}
		}
	}

	# ssl email
	for index, email in ssl_email {
		mutate {
			replace => {
				"token_ssl_email" => ""
			}
		}

		mutate {
			replace => {
				"token_ssl_email.value" => "%{email.value}"
			}
			on_error => "no_token_ssl_email"
		}

		if ![no_token_ssl_email] and [email][value] != [] {
			mutate {
				replace => {
					"token_ssl_email.key" => "ssl_email"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "token_ssl_email"
				}
				on_error => "_"
			}
		}
	}

	# additional email
	for index, email in additional_whois_email {
		mutate {
			replace => {
				"token_additional_whois_email" => ""
			}
		}

		mutate {
			replace => {
				"token_additional_whois_email.value" => "%{email.value}"
			}
			on_error => "no_token_additional_whois_email"
		}

		if ![no_token_additional_whois_email] and [email][value] != "" {
			mutate {
				replace => {
					"token_additional_whois_email.key" => "additional_whois_email"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "token_additional_whois_email"
				}
				on_error => "_"
			}
		}
	}

	# IP
	for index, ipobject in ip {
		if [index] == 0 {
			for ind, asn in ipobject.asn {
				mutate {
					replace => {
						"token_asn" => ""
					}
				}
				mutate {
					convert => {
						"asn.value" => "string"
					}
					on_error => "_"
				}
				if [ind] == 0 {
					mutate {
						replace => {
							"token_network.asn" => "%{asn.value}"
						}
						on_error => "_"
					}
				}
				else {
					mutate {
						replace => {
							"token_asn.value" => "%{asn.value}"
						}
						on_error => "no_token_asn"
					}

					if ![no_token_asn] and [asn][value] != "" {
						mutate {
							replace => {
								"token_asn.key" => "asn"
							}
						}
						mutate {
							merge => {
								"token_about.labels" => "token_asn"
							}
							on_error => "_"
						}
					}
				}
			}
			mutate {
				merge => {
					"token_principal.ip" => "ipobject.address.value"
				}
				on_error => "no_ip"
			}

			if [no_ip] {
				mutate {
					replace => {
						"principal_ip_present" => "true"
					}
				}
			}

			mutate {
				replace => {
					"token_principal.location.country_or_region" => "%{ipobject.country_code.value}"
				}
				on_error => "_"
			}

			mutate {
				replace => {
					"token_ip_isp" => ""
				}
			}

			mutate {
				replace => {
					"token_ip_isp.value" => "%{ipobject.isp.value}"
				}
				on_error => "no_token_ip_isp"
			}

			if ![no_token_ip_isp] and [ipobject][isp][value] != "" {
				mutate {
					replace => {
						"token_ip_isp.key" => "isp"
					}
				}
				mutate {
					merge => {
						"token_principal.labels" => "token_ip_isp"
					}
					on_error => "_"
				}
			}
		}
		else {
			mutate {
				replace => {
					"ip_about" => ""
					"token_ip_isp" => ""
				}
			}
			mutate {
				merge => {
					"token_principal.ip" => "ipobject.address.value"
				}
				on_error => "_"
			}
			mutate {
				merge => {
					"ip_about.ip" => "ipobject.address.value"
				}
				on_error => "_"
			}
			mutate {
				replace => {
					"ip_about.location.country_or_region" => "%{ipobject.country_code.value}"
				}
				on_error => "_"
			}

			mutate {
				replace => {
					"token_ip_isp.value" => "%{ipobject.isp.value}"
				}
				on_error => "no_token_ip_isp"
			}

			if ![no_token_ip_isp] and [ipobject][isp][value] != "" {
				mutate {
					replace => {
						"token_ip_isp.key" => "isp"
					}
				}
				mutate {
					merge => {
						"ip_about.labels" => "token_ip_isp"
					}
					on_error => "_"
				}
			}

			for ind, asn in ipobject.asn {
				mutate {
					replace => {
						"token_asn" => ""
					}
				}
				mutate {
					convert => {
						"asn.value" => "string"
					}
					on_error => "_"
				}
				mutate {
					replace => {
						"token_asn.value" => "%{asn.value}"
					}
					on_error => "no_token_asn"
				}

				if ![no_token_asn] and [asn][value] != "" {
					mutate {
						replace => {
							"token_asn.key" => "asn"
						}
					}
					mutate {
						merge => {
							"ip_about.labels" => "token_asn"
						}
						on_error => "_"
					}
				}
			}

			mutate {
				merge => {
					"event1.idm.read_only_udm.about" => "ip_about"
				}
				on_error => "_"
			}
		}
	}

	# name server
	for index, server in name_server {
		mutate {
			merge => {
				"token_principal.domain.name_server" => "server.host.value"
			}
			on_error => "_"
		}

		mutate {
			replace => {
				"name_server_about" => ""
			}
		}

		mutate {
			merge => {
				"name_server_about.domain.name_server" => "server.host.value"
			}
			on_error => "_"
		}

		for ni in server.ip {
			mutate {
				merge => {
					"name_server_about.ip" => "ni.value"
				}
				on_error => "_"
			}
		}
		mutate {
			replace => {
				"name_server_about.hostname" => "%{server.domain.value}"
			}
			on_error => "_"
		}
		mutate {
			merge => {
				"event1.idm.read_only_udm.about" => "name_server_about"
			}
			on_error => "_"
		}
	}

	date {
		match => ["first_seen.value", "yyyy-MM-dd", "RFC3339",
		"UNIX", "ISO8601"]
		target => "token_principal.domain.first_seen_time"
		on_error => "format_not_match"
	}

	mutate {
		replace => {
			"data_updated_timestamp" => "%{data_updated_timestamp}Z"
		}
		on_error => "_"
	}

	date {
		match => ["data_updated_timestamp", "yyyy-MM-dd HH:mm:ss", "RFC3339",
		"UNIX", "ISO8601"]
		target => "token_principal.domain.audit_update_time"
		on_error => "format_not_match"
	}

	# Registrar Information
	mutate {
		replace => {
			"token_principal.domain.registrar" => "%{registrar.value}"
		}
		on_error => "_"
	}

	# Mapping main risk score in 0th index of Security Result Object 
	mutate {
		convert => {
			"domain_risk.risk_score" => "float"
		}
		on_error => "_"
	}

	mutate {
		rename => {
			"domain_risk.risk_score" => "security_result1.risk_score"
		}
		on_error => "_"
	}

	mutate {
		merge => {
			"event1.idm.read_only_udm.security_result" => "security_result1"
		}
		on_error => "_"
	}

	# domain risk
	for index,component in domain_risk.components {
		mutate {
			replace => {
				"security_obj" => ""
			}
		}

		mutate {
			rename => {
				"component.risk_score" => "security_obj.risk_score"
			}
		}

		mutate {
			merge => {
				"security_obj.category_details" => "component.name"
			}
			on_error => "_"
		}

		for threat_index, threat in component.threats {
			mutate {
				replace => {
					"threat_label" => ""
				}
			}
			if [threat_index] == 0 {
				mutate {
					replace => {
						"security_obj.threat_name" => "%{threat}"
					}
				}
			}
			else {
				mutate {
					replace => {
						"threat_label.value" => "%{threat}"
					}
					on_error => "no_threat_label"
				}

				if ![no_threat_label] and [threat] != "" {
					mutate {
						replace => {
							"threat_label.key" => "threats"
						}
						on_error => "no_threat_label_key"
					}
					mutate {
						merge => {
							"security_obj.detection_fields" => "threat_label"
						}
						on_error => "_"
					}
				}
			}
		}

		# evidence
		for evidence_index, evidence in component.evidence {
			mutate {
				replace => {
					"evidence_label" => ""
				}
			}
			mutate {
				replace => {
					"evidence_label.value" => "%{evidence}"
				}
				on_error => "no_evidence_label"
			}

			if ![no_evidence_label] and [evidence] != "" {
				mutate {
					replace => {
						"evidence_label.key" => "evidence"
					}
				}
				mutate {
					merge => {
						"security_obj.detection_fields" => "evidence_label"
					}
					on_error => "_"
				}
			}
		}

		mutate {
			merge => {
				"event1.idm.read_only_udm.security_result" => "security_obj"
			}
			on_error => "_"
		}
	}

	mutate {
		replace => {
			"redirect_label.value" => "%{redirect.value}"
		}
		on_error => "no_redirect_value"
	}

	if ![no_redirect_value] and [redirect][value] != "" {
		mutate {
			replace => {
				"redirect_label.key" => "redirect"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "redirect_label"
			}
		}
	}

	mutate {
		replace => {
			"redirect_domain_label.value" => "%{redirect_domain.value}"
		}
		on_error => "no_redirect_domain_value"
	}

	if ![no_redirect_domain_value] and [redirect_domain][value] != "" {
		mutate {
			replace => {
				"redirect_domain_label.key" => "redirect_domain"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "redirect_domain_label"
			}
		}
	}

	mutate {
		replace => {
			"registrant_name_label.value" => "%{registrant_name.value}"
		}
		on_error => "no_registrant_name_value"
	}

	if ![no_registrant_name_value] and [registrant_name][value] != "" {
		mutate {
			replace => {
				"registrant_name_label.key" => "registrant_name"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "registrant_name_label"
			}
		}
	}

	mutate {
		replace => {
			"registrant_org_label.value" => "%{registrant_org.value}"
		}
		on_error => "no_registrant_org_value"
	}

	if ![no_registrant_org_value] and [registrant_org][value] != "" {
		mutate {
			replace => {
				"registrant_org_label.key" => "registrant_org"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "registrant_org_label"
			}
		}
	}

	for status in registrar_status {
		mutate {
			replace => {
				"token_registrar_status" => ""
			}
		}

		mutate {
			replace => {
				"token_registrar_status.value" => "%{status}"
			}
			on_error => "no_token_registrar_status"
		}

		if ![no_token_registrar_status] and [status] != "" {
			mutate {
				replace => {
					"token_registrar_status.key" => "registrar_status"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "token_registrar_status"
				}
				on_error => "_"
			}
		}
	}

	mutate {
		replace => {
			"spf_info_label.value" => "%{spf_info}"
		}
		on_error => "no_spf_info_value"
	}

	if ![no_spf_info_value] and [spf_info] != "" {
		mutate {
			replace => {
				"spf_info_label.key" => "spf_info"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "spf_info_label"
			}
		}
	}

	# tld
	mutate {
		replace => {
			"tld_label.value" => "%{tld}"
		}
		on_error => "no_tld_value"
	}

	if ![no_tld_value] and [tld] != "" {
		mutate {
			replace => {
				"tld_label.key" => "tld"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "tld_label"
			}
		}
	}

	# website_title
	mutate {
		replace => {
			"website_title_label.value" => "%{website_title.value}"
		}
		on_error => "no_website_title_value"
	}

	if ![no_website_title_value] and [website_title][value] != "" {
		mutate {
			replace => {
				"website_title_label.key" => "website_title"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "website_title_label"
			}
		}
	}

	# server type
	mutate {
		replace => {
			"token_network.tls.client.server_name" => "%{server_type.value}"
		}
		on_error => "no_server_type_value"
	}

	if [website_response] != "" {
		mutate {
			convert => {
				"website_response" => "integer"
			}
			on_error => "no_website_response"
		}

		mutate {
			rename => {
				"website_response" => "token_principal.network.http.response_code"
			}
		}
	}


	for tag in tags {
		mutate {
			replace => {
				"scope_token" => ""
				"tagged_at_token" => ""
				"security_obj" => ""
			}
		}
		mutate {
            merge => {
                "token_principal.process.file.tags" => "tag.label"
            }
            on_error => "_"
        }
		mutate {
			replace => {
				"scope_token.value" => "%{tag.scope}"
			}
			on_error => "no_scope_val"
		}

		if ![no_scope_val] and [tag][scope] != "" {
			mutate {
				replace => {
					"scope_token.key" => "scope"
				}
			}
			mutate {
				merge => {
					"security_obj.detection_fields" => "scope_token"
				}
			}
		}
		mutate {
			replace => {
				"tagged_at_token.value" => "%{tag.tagged_at}"
			}
			on_error => "no_tagged_at_val"
		}

		if ![no_tagged_at_val] and [tag][tagged_at] != "" {
			mutate {
				replace => {
					"tagged_at_token.key" => "tagged_at"
				}
			}
			mutate {
				merge => {
					"security_obj.detection_fields" => "tagged_at_token"
				}
			}
		}
		if [security_obj] != "" {
			mutate {
				merge => {
					"event1.idm.read_only_udm.security_result" => "security_obj"
				}
				on_error => "_"
			}
		}
	}

	# ssl_info
	for index,info in ssl_info {
		if [index] == 0 {
			mutate {
				replace => {
					"token_network.tls.server.certificate.sha1" => "%{info.hash.value}"
				}
				on_error => "_"
			}
			mutate {
				replace => {
					"token_network.tls.server.certificate.subject" => "%{info.subject.value}"
				}
				on_error => "_"
			}
			mutate {
				replace => {
					"token_network.tls.server.certificate.issuer" => "%{info.issuer_common_name.value}"
				}
				on_error => "_"
			}
			mutate {
				convert => {
					"info.not_after.value" => "string"
				}
				on_error => "_"
			}

			mutate {
				convert => {
					"info.not_before.value" => "string"
				}
				on_error => "_"
			}

			date {
				match => ["info.not_after.value", "yyyyMMdd"]
				target => "token_network.tls.server.certificate.not_after"
				on_error => "format_not_match"
			}

			date {
				match => ["info.not_before.value", "yyyyMMdd", "RFC3339",
				"UNIX", "ISO8601"]
				target => "token_network.tls.server.certificate.not_before"
				on_error => "format_not_match"
			}

			mutate {
				replace => {
					"token_network.organization_name" => "%{info.organization.value}"
				}
				on_error => "_"
			}

			mutate {
				replace => {
					"common_name_label" => ""
					"duration_label" => ""
				}
			}

			# common_name
			mutate {
				replace => {
					"common_name_label.value" => "%{info.common_name.value}"
				}
				on_error => "no_common_name_value"
			}

			if ![no_common_name_value] and [info][common_name][value] != "" {
				mutate {
					replace => {
						"common_name_label.key" => "common_name"
					}
				}
				mutate {
					merge => {
						"token_about.labels" => "common_name_label"
					}
				}
			}
			# duration
			mutate {
				convert => {
					"info.duration.value" => "string"
				}
				on_error => "_"
			}

			mutate {
				replace => {
					"duration_label.value" => "%{info.duration.value}"
				}
				on_error => "no_duration_value"
			}

			if ![no_duration_value] and [duration_label][value] != "" {
				mutate {
					replace => {
						"duration_label.key" => "duration"
					}
				}
				mutate {
					merge => {
						"token_about.labels" => "duration_label"
					}
				}
			}

			for altname in info.alt_names {
				mutate {
					replace => {
						"altname_label" => ""
					}
				}
				mutate {
					replace => {
						"altname_label.value" => "%{altname.value}"
					}
					on_error => "no_altname_value"
				}

				if ![no_altname_value] and [altname][value] != "" {
					mutate {
						replace => {
							"altname_label.key" => "alt_names"
						}
					}
					mutate {
						merge => {
							"token_about.labels" => "altname_label"
						}
					}
				}
			}
		}
		else {
			mutate {
				replace => {
					"hash_label" => ""
					"subject_label" => ""
					"issuer_common_name_label" => ""
					"not_after_label" => ""
					"not_before_label" => ""
					"organization_label" => ""
					"common_name_label" => ""
					"duration_label" => ""
					"ssl_about" => ""
				}
			}
			mutate {
				convert => {
					"info.hash.value" => "string"
				}
				on_error => "hash_conversion_error"
			}

			mutate {
				replace => {
					"hash_label.value" => "%{info.hash.value}"
				}
				on_error => "hash_not_found"
			}

			if ![hash_not_found] and [hash_label][value] != "" {
				mutate {
					replace => {
						"hash_label.key" => "hash"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "hash_label"
					}
				}
			}

			mutate {
				convert => {
					"info.subject.value" => "string"
				}
				on_error => "subject_conversion_error"
			}

			mutate {
				replace => {
					"subject_label.value" => "%{info.subject.value}"
				}
				on_error => "subject_not_found"
			}

			if ![subject_not_found] and [subject_label][value] != "" {
				mutate {
					replace => {
						"subject_label.key" => "subject"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "subject_label"
					}
				}
			}

			mutate {
				convert => {
					"info.issuer_common_name.value" => "string"
				}
				on_error => "issuer_common_name_conversion_error"
			}

			mutate {
				replace => {
					"issuer_common_name_label.value" =>
					"%{info.issuer_common_name.value}"
				}
				on_error => "issuer_common_name_not_found"
			}

			if ![issuer_common_name_not_found] and
			[issuer_common_name_label][value] != "" {
				mutate {
					replace => {
						"issuer_common_name_label.key" => "issuer_common_name"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "issuer_common_name_label"
					}
				}
			}

			mutate {
				convert => {
					"info.not_after.value" => "string"
				}
				on_error => "not_after_conversion_error"
			}

			mutate {
				replace => {
					"not_after_label.value" => "%{info.not_after.value}"
				}
				on_error => "not_after_not_found"
			}

			if ![not_after_not_found] and [not_after_label][value] != "" {
				mutate {
					replace => {
						"not_after_label.key" => "not_after"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "not_after_label"
					}
				}
			}

			mutate {
				convert => {
					"info.not_before.value" => "string"
				}
				on_error => "not_before_conversion_error"
			}

			mutate {
				replace => {
					"not_before_label.value" => "%{info.not_before.value}"
				}
				on_error => "not_before_not_found"
			}

			if ![not_before_not_found] and [not_before_label][value] != "" {
				mutate {
					replace => {
						"not_before_label.key" => "not_before"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "not_before_label"
					}
				}
			}

			mutate {
				convert => {
					"info.organization.value" => "string"
				}
				on_error => "organization_conversion_error"
			}

			mutate {
				replace => {
					"organization_label.value" => "%{info.organization.value}"
				}
				on_error => "organization_not_found"
			}

			if ![organization_not_found] and [organization_label][value] != "" {
				mutate {
					replace => {
						"organization_label.key" => "organization"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "organization_label"
					}
				}
			}

			mutate {
				convert => {
					"info.common_name.value" => "string"
				}
				on_error => "common_name_conversion_error"
			}

			mutate {
				replace => {
					"common_name_label.value" => "%{info.common_name.value}"
				}
				on_error => "common_name_not_found"
			}

			if ![common_name_not_found] and [common_name_label][value] != "" {
				mutate {
					replace => {
						"common_name_label.key" => "common_name"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "common_name_label"
					}
				}
			}

			mutate {
				convert => {
					"info.duration.value" => "string"
				}
				on_error => "duration_conversion_error"
			}

			mutate {
				replace => {
					"duration_label.value" => "%{info.duration.value}"
				}
				on_error => "duration_not_found"
			}

			if ![duration_not_found] and [duration_label][value] != "" {
				mutate {
					replace => {
						"duration_label.key" => "duration"
					}
				}
				mutate {
					merge => {
						"ssl_about.labels" => "duration_label"
					}
				}
			}

			for altname in info.alt_names {
				mutate {
					replace => {
						"altname_label" => ""
					}
				}
				mutate {
					replace => {
						"altname_label.value" => "%{altname.value}"
					}
					on_error => "no_duration_value"
				}

				if ![no_duration_value] and [altname][value] != "" {
					mutate {
						replace => {
							"altname_label.key" => "alt_names"
						}
					}
					mutate {
						merge => {
							"ssl_about.labels" => "altname_label"
						}
					}
				}
			}

			mutate {
				merge => {
					"event1.idm.read_only_udm.about" => "ssl_about"
				}
			}
		}

		mutate {
			replace => {
				"ssl_email_about" => ""
			}
		}
		# email
		for email in info.email {
			mutate {
				replace => {
					"about_email_label" => ""
				}
			}
			mutate {
				replace => {
					"about_email_label.value" => "%{email.value}"
				}
				on_error => "no_email_value"
			}

			if ![no_email_value] and [email][value] != "" {
				mutate {
					replace => {
						"about_email_label.key" => "ssl_info_email"
					}
				}
				mutate {
					merge => {
						"ssl_email_about.labels" => "about_email_label"
					}
				}
			}
		}
		if [ssl_email_about] != "" {
			mutate {
				merge => {
					"event1.idm.read_only_udm.about" => "ssl_email_about"
				}
				on_error => "_"
			}
		}
	}

	for data in mx {
		mutate {
			replace => {
				"mx_about" => ""
				"security_res" => ""
			}
		}
		mutate {
			replace => {
				"mx_about.hostname" => "%{data.host.value}"
			}
			on_error => "_"
		}
		mutate {
			replace => {
				"mx_about.domain.name" => "%{data.domain.value}"
			}
			on_error => "_"
		}

		for ip in data.ip {
			mutate {
				merge => {
					"mx_about.ip" => "ip.value"
				}
				on_error => "_"
			}
		}

		mutate {
			convert => {
				"data.priority" => "string"
			}
			on_error => "_"
		}

		mutate {
			replace => {
				"security_res.priority_details" => "%{data.priority}"
			}
			on_error => "_"
		}

		mutate {
			merge => {
				"mx_about.security_result" => "security_res"
			}
			on_error => "_"
		}

		mutate {
			merge => {
				"event1.idm.read_only_udm.about" => "mx_about"
			}
			on_error => "_"
		}
	}

	for data in ga4 {
		mutate {
			replace => {
				"ga4_label" => ""
			}
		}
		mutate {
			convert => {
				"data.value" => "string"
			}
			on_error => "ga4_conversion_error"
		}

		mutate {
			replace => {
				"ga4_label.value" => "%{data.value}"
			}
			on_error => "ga4_not_found"
		}

		if ![ga4_not_found] and [ga4_label][value] != "" {
			mutate {
				replace => {
					"ga4_label.key" => "ga4"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "ga4_label"
				}
			}
		}
	}

	for gc in gtm_codes {
		mutate {
			replace => {
				"gtm_codes_label" => ""
			}
		}
		mutate {
			convert => {
				"gc.value" => "string"
			}
			on_error => "gtm_codes_conversion_error"
		}

		mutate {
			replace => {
				"gtm_codes_label.value" => "%{gc.value}"
			}
			on_error => "gtm_codes_not_found"
		}

		if ![gtm_codes_not_found] and [gtm_codes_label][value] != "" {
			mutate {
				replace => {
					"gtm_codes_label.key" => "gtm_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "gtm_codes_label"
				}
			}
		}
	}

	for fc in fb_codes {
		mutate {
			replace => {
				"fb_codes_label" => ""
			}
		}
		mutate {
			convert => {
				"fc.value" => "string"
			}
			on_error => "fb_codes_conversion_error"
		}

		mutate {
			replace => {
				"fb_codes_label.value" => "%{fc.value}"
			}
			on_error => "fb_codes_not_found"
		}

		if ![fb_codes_not_found] and [fb_codes_label][value] != "" {
			mutate {
				replace => {
					"fb_codes_label.key" => "fb_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "fb_codes_label"
				}
			}
		}
	}

	for hc in hotjar_codes {
		mutate {
			replace => {
				"hotjar_codes_label" => ""
			}
		}
		mutate {
			convert => {
				"hc.value" => "string"
			}
			on_error => "hotjar_codes_conversion_error"
		}

		mutate {
			replace => {
				"hotjar_codes_label.value" => "%{hc.value}"
			}
			on_error => "hotjar_codes_not_found"
		}

		if ![hotjar_codes_not_found] and [hotjar_codes_label][value] != "" {
			mutate {
				replace => {
					"hotjar_codes_label.key" => "hotjar_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "hotjar_codes_label"
				}
			}
		}
	}

	for bc in baidu_codes {
		mutate {
			replace => {
				"baidu_codes_label" => ""
			}
		}
		mutate {
			convert => {
				"bc.value" => "string"
			}
			on_error => "baidu_codes_conversion_error"
		}

		mutate {
			replace => {
				"baidu_codes_label.value" => "%{bc.value}"
			}
			on_error => "baidu_codes_not_found"
		}

		if ![baidu_codes_not_found] and [baidu_codes_label][value] != "" {
			mutate {
				replace => {
					"baidu_codes_label.key" => "baidu_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "baidu_codes_label"
				}
			}
		}
	}

	for yc in yandex_codes {
		mutate {
			replace => {
				"yandex_codes_label" => ""
			}
		}

		mutate {
			convert => {
				"yc.value" => "string"
			}
			on_error => "yandex_codes_conversion_error"
		}

		mutate {
			replace => {
				"yandex_codes_label.value" => "%{yc.value}"
			}
			on_error => "yandex_codes_not_found"
		}

		if ![yandex_codes_not_found] and [yandex_codes_label][value] != "" {
			mutate {
				replace => {
					"yandex_codes_label.key" => "yandex_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "yandex_codes_label"
				}
			}
		}
	}

	for mc in matomo_codes {
		mutate {
			replace => {
				"matomo_codes_label" => ""
			}
		}
		mutate {
			convert => {
				"mc.value" => "string"
			}
			on_error => "matomo_codes_conversion_error"
		}

		mutate {
			replace => {
				"matomo_codes_label.value" => "%{mc.value}"
			}
			on_error => "matomo_codes_not_found"
		}

		if ![matomo_codes_not_found] and [matomo_codes_label][value] != "" {
			mutate {
				replace => {
					"matomo_codes_label.key" => "matomo_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "matomo_codes_label"
				}
			}
		}
	}

	for pc in statcounter_project_codes {
		mutate {
			replace => {
				"statcounter_project_codes_label" => ""
			}
		}
		mutate {
			convert => {
				"pc.value" => "string"
			}
			on_error => "statcounter_project_codes_conversion_error"
		}

		mutate {
			replace => {
				"statcounter_project_codes_label.value" =>
				"%{pc.value}"
			}
			on_error => "statcounter_project_codes_not_found"
		}

		if ![statcounter_project_codes_not_found] and
		[statcounter_project_codes_label][value] != "" {
			mutate {
				replace => {
					"statcounter_project_codes_label.key" => "statcounter_project_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "statcounter_project_codes_label"
				}
			}
		}
	}

	for sc in statcounter_security_codes {
		mutate {
			replace => {
				"statcounter_security_codes_label" => ""
			}
		}
		mutate {
			convert => {
				"sc.value" => "string"
			}
			on_error => "statcounter_security_codes_conversion_error"
		}

		mutate {
			replace => {
				"statcounter_security_codes_label.value" =>
				"%{sc.value}"
			}
			on_error => "statcounter_security_codes_not_found"
		}

		if ![statcounter_security_codes_not_found] and
		[statcounter_security_codes_label][value] != "" {
			mutate {
				replace => {
					"statcounter_security_codes_label.key" =>
					"statcounter_security_codes"
				}
			}
			mutate {
				merge => {
					"token_about.labels" => "statcounter_security_codes_label"
				}
			}
		}
	}

	mutate {
		convert => {
			"allow_domain" => "string"
		}
		on_error => "allowed_domain_conversion_error"
	}

	mutate {
		replace => {
			"allowed_domain_label.value" => "%{allow_domain}"
		}
		on_error => "allowed_domain_not_found"
	}

	if ![allowed_domain_not_found] and
	[allowed_domain_label][value] != "" {
		mutate {
			replace => {
				"allowed_domain_label.key" => "allowed_domain"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "allowed_domain_label"
			}
		}
	}

	mutate {
		convert => {
			"monitor_tag" => "string"
		}
		on_error => "moniter_tag_conversion_error"
	}

	mutate {
		replace => {
			"moniter_tag_label.value" => "%{monitor_tag}"
		}
		on_error => "moniter_tag_not_found"
	}

	if ![moniter_tag_not_found] and [moniter_tag_label][value] != "" {
		mutate {
			replace => {
				"moniter_tag_label.key" => "moniter_tag"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "moniter_tag_label"
			}
		}
	}

	mutate {
		convert => {
			"monitor_domain" => "string"
		}
		on_error => "moniter_domain_conversion_error"
	}

	mutate {
		replace => {
			"moniter_domain_label.value" => "%{monitor_domain}"
		}
		on_error => "moniter_domain_not_found"
	}

	if ![moniter_domain_not_found] and
	[moniter_domain_label][value] != "" {
		mutate {
			replace => {
				"moniter_domain_label.key" => "moniter_domain"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "moniter_domain_label"
			}
		}
	}

	mutate {
		convert => {
			"tag_name" => "string"
		}
		on_error => "tag_name_conversion_error"
	}

	mutate {
		replace => {
			"tag_name_label.value" => "%{tag_name}"
		}
		on_error => "tag_name_not_found"
	}

	if ![tag_name_not_found] and [tag_name_label][value] != "" {
		mutate {
			replace => {
				"tag_name_label.key" => "tag_name"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "tag_name_label"
			}
		}
	}

	mutate {
		convert => {
			"timestamp" => "string"
		}
		on_error => "timestamp_conversion_error"
	}

	mutate {
		replace => {
			"timestamp_label.value" => "%{timestamp}"
		}
		on_error => "timestamp_not_found"
	}

	if ![timestamp_not_found] and [timestamp_label][value] != "" {
		mutate {
			replace => {
				"timestamp_label.key" => "timestamp"
			}
		}
		mutate {
			merge => {
				"token_about.labels" => "timestamp_label"
			}
		}
	}

	mutate {
		replace => {
			"token_metadata.product_name" => "DOMAINTOOL"
			"token_metadata.vendor_name" => "DOMAINTOOL"
			"token_metadata.event_type" => "STATUS_UPDATE"
		}
	}

	if [no_principal_hostname] and [principal_ip_present] == "false" {
		mutate {
			replace => {
				"token_metadata.event_type" => "GENERIC_EVENT"
			}
		}
	}

	mutate {
		merge => {
			"event1.idm.read_only_udm.about" => "token_about"
		}
		on_error => "_"
	}

	mutate {
		rename => {
			"token_principal" => "event1.idm.read_only_udm.principal"
			"token_network" => "event1.idm.read_only_udm.network"
			"token_metadata" => "event1.idm.read_only_udm.metadata"
		}
	}

	mutate {
		merge => {
			"event1.idm.read_only_udm.security_result" => "security_result"
		}
		on_error => "_"
	}

	mutate {
		merge => {
			"@output" => "event1"
		}
	}
}